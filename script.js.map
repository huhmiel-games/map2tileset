{
  "version": 3,
  "sources": ["../src/script.js"],
  "sourcesContent": ["// Html elements\nconst saveTilesetBtn = document.getElementById('save-tileset');\nconst undoBtn = document.getElementById('undo-btn');\nconst redoBtn = document.getElementById('redo-btn');\nconst imageElm = document.getElementById(\"image\");\nconst offsetXInput = document.getElementById('offset-x');\nconst offsetYInput = document.getElementById('offset-y');\n/**@type {HTMLCanvasElement} */\nconst imageCanvas = document.getElementById('imageCanvas');\nconst tilesetElm = document.getElementById(\"tileset\");\n/**@type {HTMLCanvasElement} */\nconst tilesetCanvas = document.getElementById('tilesetCanvas');\nconst redZone = document.getElementById(\"red-zone\");\n/**@type {HTMLCanvasElement} */\nconst floatingCanvas = document.getElementById('floating-canvas');\nconst selectedAreaLabelElm = document.getElementById('selected-area-label');\nconst imageZoomLabel = document.getElementById('image-zoom');\nconst tilesetZoomLabel = document.getElementById('tileset-zoom');\nconst leftPanel = document.getElementById('left-panel');\nconst rightPanel = document.getElementById('right-panel');\n\n// Data\nconst selectedImageArea = {\n    sx: 0,\n    sy: 0,\n    ex: 0,\n    ey: 0,\n    isDirty: false,\n    isComplete: false,\n    data: undefined\n}\n\nconst image = {\n    name: '',\n    width: 0,\n    height: 0,\n    isLoaded: false,\n    zoom: 1,\n    offsetX: 0,\n    offsetY: 0\n}\n\nconst tileset = {\n    name: '',\n    width: 0,\n    height: 0,\n    isLoaded: false,\n    zoom: 1,\n    undos: [],\n    redos: []\n}\n\nconst settings = {\n    tilesize: +localStorage.getItem('tilesize') || 8\n}\n\nlet visibleModal = undefined;\nconst navbarHeight = document.querySelector('nav').clientHeight;\n\n// Event listeners\ndocument.getElementById('open-image').addEventListener('change', openImage, false);\ndocument.getElementById('open-tileset').addEventListener('change', openTileset, false);\ndocument.getElementById('settings-btn').addEventListener('click', openModal, false);\ndocument.getElementById('about-btn').addEventListener('click', openModal, false);\ndocument.getElementById('new-tileset-btn').addEventListener('click', openModal, false);\ndocument.addEventListener('wheel', onMouseWheel, { passive: false });\n(document.querySelectorAll('[id ^= \"close-\"]')).forEach(elm => elm.addEventListener('click', closeModal));\ndocument.getElementById('confirm-settings-btn').addEventListener('click', saveSettings);\ndocument.getElementById('confirm-tileset-btn').addEventListener('click', createNewTileset, false);\ndocument.addEventListener('keydown', handleKeyPress);\noffsetXInput.addEventListener('change', setOffsetX, false);\noffsetYInput.addEventListener('change', setOffsetY, false);\nselectedAreaLabelElm.addEventListener('click', resetSelection, false);\nimageCanvas.addEventListener('mousedown', onImageCanvasMouseDown, false);\nimageCanvas.addEventListener('mouseup', onImageCanvasMouseUp, false);\nimageCanvas.addEventListener('contextmenu', resetSelection, false);\nundoBtn.addEventListener('click', undo, false);\nredoBtn.addEventListener('click', redo, false);\nsaveTilesetBtn.addEventListener('click', downloadTilesetAsImage, false);\ntilesetCanvas.addEventListener('mousemove', moveFloatingCanvas, false);\ntilesetCanvas.addEventListener('click', paste, false);\ntilesetCanvas.addEventListener('contextmenu', resetFloatingCanvas, false);\n\n// Init\nif (settings.tilesize !== 8)\n{\n    imageCanvas.style.backgroundImage = `url(\"/assets/grid-${settings.tilesize / 8}.png\")`;\n    tilesetCanvas.style.backgroundImage = `url(\"/assets/grid-${settings.tilesize / 8}.png\")`;\n}\n// Settings\nfunction openModal(event)\n{\n    event.preventDefault();\n    document.getElementById('tilesize').value = settings.tilesize;\n    const modal = document.getElementById(event.currentTarget.getAttribute(\"data-target\"));\n    modal.open = true;\n    visibleModal = modal;\n}\n\nfunction closeModal(event)\n{\n    visibleModal = undefined;\n    event.preventDefault();\n    document.getElementById('tilesize').value = settings.tilesize;\n    const modal = document.getElementById(event.currentTarget.getAttribute(\"data-target\"));\n    modal.open = false;\n}\n\nfunction saveSettings(event)\n{\n    event.preventDefault();\n    settings.tilesize = +document.getElementById('tilesize').value;\n    localStorage.setItem('tilesize', settings.tilesize);\n    closeModal(event);\n}\n\n// Image canvas\nfunction openImage(event)\n{\n    const imageFiles = event.target.files;\n    const imageFilesLength = imageFiles.length;\n    resetOffset();\n    if (imageFilesLength > 0)\n    {\n        image.name = imageFiles.name;\n        const imageSrc = URL.createObjectURL(imageFiles[0]);\n        imageElm.src = imageSrc;\n        imageElm.addEventListener(\"load\", (e) =>\n        {\n            image.width = imageElm.naturalWidth;\n            image.height = imageElm.naturalHeight;\n            imageCanvas.classList.remove('none');\n            drawImage(imageCanvas, imageElm);\n            image.isLoaded = true;\n        }, { once: true });\n    }\n}\n\nfunction moveImage()\n{\n    const imageCtx = imageCanvas.getContext('2d');\n    imageCtx.clearRect(0, 0, imageCanvas.width, imageCanvas.height);\n    drawImage(imageCanvas, imageElm, image.offsetX, image.offsetY);\n}\n\nfunction copy()\n{\n    const imageCtx = imageCanvas.getContext('2d');\n    try\n    {\n        selectedImageArea.data = imageCtx.getImageData(\n            selectedImageArea.sx / image.zoom,\n            selectedImageArea.sy / image.zoom,\n            (selectedImageArea.ex - selectedImageArea.sx) / image.zoom,\n            (selectedImageArea.ey - selectedImageArea.sy) / image.zoom\n        );\n    } catch (error)\n    {\n        alert('Select a zone first');\n        return;\n    }\n\n    floatingCanvas.classList.remove('none');\n    floatingCanvas.classList.add('floating-canvas');\n    floatingCanvas.width = selectedImageArea.ex - selectedImageArea.sx;\n    floatingCanvas.height = selectedImageArea.ey - selectedImageArea.sy;\n    const ctx = floatingCanvas.getContext('2d');\n    ctx.putImageData(selectedImageArea.data, 0, 0);\n}\n\nfunction setOffsetX(event)\n{\n    image.offsetX = +event.target.value;\n    if (image.isLoaded)\n    {\n        moveImage()\n    }\n}\n\nfunction setOffsetY(event)\n{\n    image.offsetY = +event.target.value;\n    if (image.isLoaded)\n    {\n        moveImage()\n    }\n}\n\nfunction resetOffset()\n{\n    image.offsetX = 0;\n    image.offsetY = 0;\n    offsetXInput.value = 0;\n    offsetYInput.value = 0;\n}\n\nfunction onImageCanvasMouseDown(event)\n{\n    if (image.isLoaded === false || event.button !== 0) return;\n\n    if (selectedImageArea.isComplete)\n    {\n        resetSelection(event);\n    }\n\n    selectedImageArea.sx = roundMultipleTilesize((event.offsetX - image.offsetX) / image.zoom) * image.zoom;\n    selectedImageArea.sy = roundMultipleTilesize((event.offsetY - image.offsetY) / image.zoom) * image.zoom;\n    selectedImageArea.isDirty = true;\n\n    placeRedZone(selectedImageArea.sx, selectedImageArea.sy);\n}\n\nfunction onImageCanvasMouseUp(event)\n{\n    if (\n        selectedImageArea.isDirty === false ||\n        image.isLoaded === false ||\n        selectedImageArea.isComplete === true ||\n        event.button !== 0\n    ) return;\n\n    // selectedImageArea.ex = roundMultipleTilesize(event.offsetX);\n    // selectedImageArea.ey = roundMultipleTilesize(event.offsetY);\n\n    let width = roundMultipleTilesize((event.offsetX - selectedImageArea.sx) / image.zoom);\n    let height = roundMultipleTilesize((event.offsetY - selectedImageArea.sy) / image.zoom);\n\n    while (isMultipleOfTilesize(width) === false)\n    {\n        width = Math.floor(width + 1);\n    }\n    while (isMultipleOfTilesize(height) === false)\n    {\n        height = Math.floor(height + 1);\n    }\n\n    selectedImageArea.ex = selectedImageArea.sx + width * image.zoom;\n    selectedImageArea.ey = selectedImageArea.sy + height * image.zoom;\n\n    // selectedImageArea.ex = roundMultipleTilesize(event.offsetX);\n    // selectedImageArea.ey = roundMultipleTilesize(event.offsetY);\n\n    if (selectedImageArea.ex === selectedImageArea.sx)\n    {\n        selectedImageArea.ex += settings.tilesize;\n    }\n\n    if (selectedImageArea.ey === selectedImageArea.sy)\n    {\n        selectedImageArea.ey += settings.tilesize;\n    }\n\n    selectedImageArea.isComplete = true;\n    setRedZoneSize(selectedImageArea);\n    copy();\n}\n\nfunction onMouseMove(event)\n{\n    // zone selection\n    if (event.target.id === 'imageCanvas' && !selectedImageArea.isComplete && selectedImageArea.isDirty)\n    {\n        selectedImageArea.ex = roundMultipleTilesize(event.offsetX);\n        selectedImageArea.ey = roundMultipleTilesize(event.offsetY);\n        setRedZoneSize(selectedImageArea)\n    }\n}\n\n// Tileset canvas\nfunction openTileset(event)\n{\n    const tilesetFiles = event.target.files;\n    const tilesetFilesLength = tilesetFiles.length;\n    if (tilesetFilesLength > 0)\n    {\n        tileset.name = tilesetFiles[0].name;\n        const tilesetSrc = URL.createObjectURL(tilesetFiles[0]);\n        tilesetElm.src = tilesetSrc;\n        tilesetElm.addEventListener(\"load\", (e) =>\n        {\n            tileset.width = tilesetElm.naturalWidth;\n            tileset.height = tilesetElm.naturalHeight;\n            tilesetCanvas.classList.remove('none');\n            drawImage(tilesetCanvas, tilesetElm);\n            tileset.isLoaded = true;\n            saveTilesetBtn.disabled = false;\n            if (image.isLoaded && selectedImageArea.isComplete)\n            {\n                copy();\n            }\n        }, { once: true });\n    }\n}\n\nfunction createNewTileset(event)\n{\n    const name = document.getElementById('tileset-name').value || 'tileset';\n    tileset.name = name + '.png';\n    tileset.width = +document.getElementById('tileset-width').value || 512;\n    tileset.height = +document.getElementById('tileset-height').value || 512;\n    tilesetCanvas.width = tileset.width;\n    tilesetCanvas.height = tileset.height;\n    const ctx = tilesetCanvas.getContext('2d');\n    ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n    ctx.fillRect(0, 0, tileset.width, tileset.height);\n    tilesetElm.src = tilesetCanvas.toDataURL();\n    tilesetCanvas.classList.remove('none');\n    tileset.isLoaded = true;\n    saveTilesetBtn.disabled = false;\n    if (image.isLoaded && selectedImageArea.isComplete)\n    {\n        copy();\n    }\n    closeModal(event);\n}\n\nfunction downloadTilesetAsImage()\n{\n    const newTileset = tilesetCanvas.toDataURL('image/png');\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n    xhr.onload = function ()\n    {\n        let a = document.createElement('a');\n        a.href = window.URL.createObjectURL(xhr.response);\n        a.download = tileset.name;\n        a.style.display = 'none';\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n    };\n    xhr.open('GET', newTileset);\n    xhr.send();\n}\n\nfunction paste(event)\n{\n    const x = roundMultipleTilesize(event.offsetX / tileset.zoom) - roundMultipleTilesize(selectedImageArea.data.width / 2);\n    const y = roundMultipleTilesize(event.offsetY / tileset.zoom) - roundMultipleTilesize(selectedImageArea.data.height / 2);\n\n    const width = (selectedImageArea.ex - selectedImageArea.sx) / image.zoom;\n    const height = (selectedImageArea.ey - selectedImageArea.sy) / image.zoom;\n\n    if (selectedImageArea.data)\n    {\n        const ctx = tilesetCanvas.getContext(\"2d\");\n        const previousData = ctx.getImageData(x, y, width, height);\n        const undo = new Task(previousData, x, y, width, height);\n        tileset.undos.push(undo);\n        const floatingCtx = floatingCanvas.getContext('2d');\n        const floatingData = floatingCtx.getImageData(0, 0, selectedImageArea.data.width, selectedImageArea.data.height);\n        ctx.putImageData(floatingData, x, y);\n        undoBtn.disabled = false;\n    }\n}\n\nfunction undo()\n{\n    const lastTask = tileset.undos.at(-1);\n    if (!lastTask) return;\n    const ctx = tilesetCanvas.getContext(\"2d\");\n    const redoData = ctx.getImageData(lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    const redo = new Task(redoData, lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    tileset.redos.push(redo);\n    ctx.clearRect(lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    ctx.putImageData(lastTask.data, lastTask.x, lastTask.y);\n    tileset.undos.pop();\n    redoBtn.disabled = false;\n    if (tileset.undos.length === 0)\n    {\n        undoBtn.disabled = true;\n    }\n}\n\nfunction redo()\n{\n    const lastTask = tileset.redos.at(-1);\n    if (!lastTask) return;\n    const ctx = tilesetCanvas.getContext(\"2d\");\n    const undoData = ctx.getImageData(lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    const undo = new Task(undoData, lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    tileset.undos.push(undo);\n    ctx.clearRect(lastTask.x, lastTask.y, lastTask.width, lastTask.height);\n    ctx.putImageData(lastTask.data, lastTask.x, lastTask.y);\n    tileset.redos.pop();\n    undoBtn.disabled = false;\n    if (tileset.redos.length === 0)\n    {\n        redoBtn.disabled = true;\n    }\n}\n\n// Floating canvas\nfunction moveFloatingCanvas(event)\n{\n    if (selectedImageArea.data === undefined) return;\n\n    if (floatingCanvas.style.width !== floatingCanvas.width * tileset.zoom + 'px')\n    {\n        floatingCanvas.style.width = floatingCanvas.width * tileset.zoom + 'px';\n        floatingCanvas.style.height = floatingCanvas.height * tileset.zoom + 'px';\n    }\n\n    const x = (roundMultipleTilesize(event.offsetX / tileset.zoom) - roundMultipleTilesize(selectedImageArea.data.width / 2)) * tileset.zoom;\n    const y = (roundMultipleTilesize(event.offsetY / tileset.zoom) - roundMultipleTilesize(selectedImageArea.data.height / 2)) * tileset.zoom;\n    const marginX = document.body.clientWidth / 2 - rightPanel.scrollLeft;\n    const marginY = navbarHeight - rightPanel.scrollTop;\n    floatingCanvas.style.left = marginX + x + 'px';\n    floatingCanvas.style.top = marginY + y + 'px';\n}\n\nfunction flipX()\n{\n    const ctx = floatingCanvas.getContext('2d');\n\n    const inMemoryCanvas = document.createElement('canvas');\n    const inMemoryCtx = inMemoryCanvas.getContext('2d');\n    inMemoryCtx.drawImage(floatingCanvas, 0, 0);\n\n    ctx.clearRect(0, 0, selectedImageArea.data.width, selectedImageArea.data.height);\n    ctx.translate(selectedImageArea.data.width, 0);\n    ctx.scale(-1, 1);\n    ctx.drawImage(inMemoryCanvas, 0, 0);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\nfunction flipY()\n{\n    const ctx = floatingCanvas.getContext('2d');\n\n    const inMemoryCanvas = document.createElement('canvas');\n    const inMemoryCtx = inMemoryCanvas.getContext('2d');\n    inMemoryCtx.drawImage(floatingCanvas, 0, 0);\n\n    ctx.clearRect(0, 0, selectedImageArea.data.width, selectedImageArea.data.height);\n    ctx.translate(0, selectedImageArea.data.height);\n    ctx.scale(1, -1);\n    ctx.drawImage(inMemoryCanvas, 0, 0);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\nfunction resetFloatingCanvas(event)\n{\n    event.stopPropagation();\n    event.preventDefault();\n    if (event.button === 2)\n    {\n        const ctx = floatingCanvas.getContext('2d');\n        ctx.clearRect(0, 0, floatingCanvas.width, floatingCanvas.height);\n        selectedImageArea.data = undefined;\n        floatingCanvas.style.left = '0px';\n        floatingCanvas.style.top = '0px';\n        floatingCanvas.width = '0px'\n        floatingCanvas.height = '0px';\n    }\n}\n\n// Red zone\nfunction placeRedZone(x_pos, y_pos)\n{\n    if (selectedImageArea.isComplete) return;\n    redZone.style.width = '0px';\n    redZone.style.height = '0px';\n    redZone.style.left = x_pos + 'px';\n    redZone.style.top = y_pos + 'px';\n}\n\nfunction setRedZoneSize(zone)\n{\n    const x = roundMultipleTilesize(zone.ex - zone.sx);\n    const y = roundMultipleTilesize(zone.ey - zone.sy);\n\n    if (redZone.style.width !== x + 'px')\n    {\n        redZone.style.width = x + 'px';\n    }\n\n    if (redZone.style.height !== y + 'px')\n    {\n        redZone.style.height = y + 'px';\n    }\n\n    selectedAreaLabelElm.innerHTML = `Width: ${x / settings.tilesize} Height: ${y / settings.tilesize}`\n}\n\nfunction resetRedZone()\n{\n    redZone.style.width = '0px';\n    redZone.style.height = '0px';\n    redZone.style.left = '0px';\n    redZone.style.top = '0px';\n}\n\n// Zoom\nfunction onMouseWheel(event)\n{\n    if (event.ctrlKey) event.preventDefault();\n\n    // zoom image\n    if (event.ctrlKey && event.target.id === 'imageCanvas' && image.isLoaded)\n    {\n        if (selectedImageArea.isComplete) resetSelection(event);\n\n        let scrollX, scrollY;\n        if (event.wheelDelta > 0)\n        {\n            if (image.zoom === 64) return;\n            image.zoom = clamp(image.zoom * 2, 0, 64);\n            scrollX = (event.offsetX - event.clientX / 2) * 2;\n            scrollY = (event.offsetY - (event.clientY - navbarHeight) / 2) * 2;\n\n        }\n        else if (event.wheelDelta < 0)\n        {\n            if (image.zoom < 0.02) return;\n            image.zoom /= 2;\n            scrollX = (event.offsetX - event.clientX * 2) / 2;\n            scrollY = (event.offsetY - (event.clientY - navbarHeight) * 2) / 2;\n        }\n\n        imageCanvas.style.width = image.width * image.zoom + 'px';\n        imageCanvas.style.height = image.height * image.zoom + 'px';\n        leftPanel.scroll(scrollX, scrollY);\n\n        imageZoomLabel.innerText = `Zoom: ${image.zoom}`;\n\n        if (image.zoom >= 1)\n        {\n            imageCanvas.style.backgroundImage = `url(\"/assets/grid-${image.zoom * settings.tilesize / 8}.png\")`;\n        }\n    }\n\n    // zoom tileset\n    if (event.ctrlKey && event.target.id === 'tilesetCanvas' && tileset.isLoaded)\n    {\n        let scrollX, scrollY;\n        if (event.wheelDelta > 0)\n        {\n            if (tileset.zoom === 64) return;\n            tileset.zoom = clamp(tileset.zoom * 2, 0, 64);;\n            scrollX = (event.offsetX - (event.clientX - rightPanel.offsetLeft) / 2) * 2;\n            scrollY = (event.offsetY - (event.clientY - rightPanel.offsetTop) / 2) * 2;\n        }\n        else if (event.wheelDelta < 0)\n        {\n            if (tileset.zoom < 0.02) return;\n            tileset.zoom /= 2;\n            scrollX = (event.offsetX - (event.clientX - rightPanel.offsetLeft) * 2) / 2;\n            scrollY = (event.offsetY - (event.clientY - rightPanel.offsetTop) * 2) / 2;\n        }\n\n        tilesetCanvas.style.width = tileset.width * tileset.zoom + 'px';\n        tilesetCanvas.style.height = tileset.height * tileset.zoom + 'px';\n        rightPanel.scroll(scrollX, scrollY);\n\n        tilesetZoomLabel.innerText = `Zoom: ${tileset.zoom}`;\n\n        if (tileset.zoom >= 1)\n        {\n            tilesetCanvas.style.backgroundImage = `url(\"/assets/grid-${tileset.zoom * settings.tilesize / 8}.png\")`;\n        }\n    }\n}\n\n// Key press\nfunction handleKeyPress(event)\n{\n    if (event.ctrlKey && event.key === 'z' && undoBtn.disabled === false)\n    {\n        event.preventDefault();\n        undo();\n        return;\n    }\n\n    if (event.ctrlKey && event.key === 'y' && redoBtn.disabled === false)\n    {\n        event.preventDefault();\n        redo();\n        return;\n    }\n\n    if (event.ctrlKey && event.key === 's' && tileset.isLoaded)\n    {\n        event.preventDefault();\n        downloadTilesetAsImage();\n        return;\n    }\n\n    if (event.ctrlKey === false && event.key === 'x' && selectedImageArea.data !== undefined)\n    {\n        flipX();\n        return;\n    }\n\n    if (event.ctrlKey === false && event.key === 'y' && selectedImageArea.data !== undefined)\n    {\n        flipY();\n        return;\n    }\n\n    if (event.ctrlKey && event.key === 'a' && image.isLoaded)\n    {\n        event.preventDefault();\n        selectedImageArea.sx = 0;\n        selectedImageArea.sy = navbarHeight;\n        selectedImageArea.isDirty = true;\n        placeRedZone(selectedImageArea.sx, selectedImageArea.sy);\n        selectedImageArea.ex = image.width;\n        selectedImageArea.ey = image.height;\n        selectedImageArea.isComplete = true;\n        redZone.style.width = image.width + 'px';\n        redZone.style.height = image.height + 'px';\n        copy();\n    }\n}\n\n// Utils\nfunction resetZone()\n{\n    selectedImageArea.sx = 0;\n    selectedImageArea.sy = 0;\n    selectedImageArea.ex = 0;\n    selectedImageArea.ey = 0;\n    selectedImageArea.isDirty = false;\n}\n\nfunction drawImage(canvas, img, x = 0, y = 0)\n{\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = img.naturalWidth;\n    canvas.height = img.naturalHeight;\n    ctx.drawImage(img, x, y);\n}\n\nfunction roundMultipleTilesize(num)\n{\n    const size = settings.tilesize;\n    return Math.round(num / size) * size;\n}\n\nfunction isMultipleOfTilesize(nbr)\n{\n    if (nbr === 0) return false;\n    return nbr % settings.tilesize === 0;\n}\n\nfunction clamp(number, min, max)\n{\n    return Math.max(min, Math.min(number, max));\n}\n\nfunction resetSelection(event)\n{\n    event.stopPropagation();\n    event.preventDefault();\n    resetZone();\n    resetRedZone();\n    selectedImageArea.isComplete = false;\n    selectedAreaLabelElm.innerHTML = 'Width: 0 Height: 0';\n}\n\nfunction debounce(func, time)\n{\n    let timer = null;\n    return (event) =>\n    {\n        clearTimeout(timer);\n        timer = setTimeout(() => func(event), time);\n    };\n}\n\nclass Task\n{\n    constructor(data, x, y, width, height)\n    {\n        this.data = data;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n}\n"],
  "mappings": "MACA,IAAMA,EAAiB,SAAS,eAAe,cAAc,EACvDC,EAAU,SAAS,eAAe,UAAU,EAC5CC,EAAU,SAAS,eAAe,UAAU,EAC5CC,EAAW,SAAS,eAAe,OAAO,EAC1CC,EAAe,SAAS,eAAe,UAAU,EACjDC,EAAe,SAAS,eAAe,UAAU,EAEjDC,EAAc,SAAS,eAAe,aAAa,EACnDC,EAAa,SAAS,eAAe,SAAS,EAE9CC,EAAgB,SAAS,eAAe,eAAe,EACvDC,EAAU,SAAS,eAAe,UAAU,EAE5CC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAuB,SAAS,eAAe,qBAAqB,EACpEC,EAAiB,SAAS,eAAe,YAAY,EACrDC,EAAmB,SAAS,eAAe,cAAc,EACzDC,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAa,SAAS,eAAe,aAAa,EAGlDC,EAAoB,CACtB,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,GAAI,EACJ,QAAS,GACT,WAAY,GACZ,KAAM,MACV,EAEMC,EAAQ,CACV,KAAM,GACN,MAAO,EACP,OAAQ,EACR,SAAU,GACV,KAAM,EACN,QAAS,EACT,QAAS,CACb,EAEMC,EAAU,CACZ,KAAM,GACN,MAAO,EACP,OAAQ,EACR,SAAU,GACV,KAAM,EACN,MAAO,CAAC,EACR,MAAO,CAAC,CACZ,EAEMC,EAAW,CACb,SAAU,CAAC,aAAa,QAAQ,UAAU,GAAK,CACnD,EAEIC,EACEC,EAAe,SAAS,cAAc,KAAK,EAAE,aAGnD,SAAS,eAAe,YAAY,EAAE,iBAAiB,SAAUC,EAAW,EAAK,EACjF,SAAS,eAAe,cAAc,EAAE,iBAAiB,SAAUC,EAAa,EAAK,EACrF,SAAS,eAAe,cAAc,EAAE,iBAAiB,QAASC,EAAW,EAAK,EAClF,SAAS,eAAe,WAAW,EAAE,iBAAiB,QAASA,EAAW,EAAK,EAC/E,SAAS,eAAe,iBAAiB,EAAE,iBAAiB,QAASA,EAAW,EAAK,EACrF,SAAS,iBAAiB,QAASC,GAAc,CAAE,QAAS,EAAM,CAAC,EAClE,SAAS,iBAAiB,kBAAkB,EAAG,QAAQC,GAAOA,EAAI,iBAAiB,QAASC,CAAU,CAAC,EACxG,SAAS,eAAe,sBAAsB,EAAE,iBAAiB,QAASC,CAAY,EACtF,SAAS,eAAe,qBAAqB,EAAE,iBAAiB,QAASC,EAAkB,EAAK,EAChG,SAAS,iBAAiB,UAAWC,EAAc,EACnD1B,EAAa,iBAAiB,SAAU2B,EAAY,EAAK,EACzD1B,EAAa,iBAAiB,SAAU2B,EAAY,EAAK,EACzDrB,EAAqB,iBAAiB,QAASsB,EAAgB,EAAK,EACpE3B,EAAY,iBAAiB,YAAa4B,EAAwB,EAAK,EACvE5B,EAAY,iBAAiB,UAAW6B,EAAsB,EAAK,EACnE7B,EAAY,iBAAiB,cAAe2B,EAAgB,EAAK,EACjEhC,EAAQ,iBAAiB,QAASmC,EAAM,EAAK,EAC7ClC,EAAQ,iBAAiB,QAASmC,EAAM,EAAK,EAC7CrC,EAAe,iBAAiB,QAASsC,EAAwB,EAAK,EACtE9B,EAAc,iBAAiB,YAAa+B,GAAoB,EAAK,EACrE/B,EAAc,iBAAiB,QAASgC,GAAO,EAAK,EACpDhC,EAAc,iBAAiB,cAAeiC,GAAqB,EAAK,EAGpEtB,EAAS,WAAa,IAEtBb,EAAY,MAAM,gBAAkB,qBAAqBa,EAAS,SAAW,UAC7EX,EAAc,MAAM,gBAAkB,qBAAqBW,EAAS,SAAW,WAGnF,SAASK,EAAUkB,EACnB,CACIA,EAAM,eAAe,EACrB,SAAS,eAAe,UAAU,EAAE,MAAQvB,EAAS,SACrD,IAAMwB,EAAQ,SAAS,eAAeD,EAAM,cAAc,aAAa,aAAa,CAAC,EACrFC,EAAM,KAAO,GACbvB,EAAeuB,CACnB,CAEA,SAAShB,EAAWe,EACpB,CACItB,EAAe,OACfsB,EAAM,eAAe,EACrB,SAAS,eAAe,UAAU,EAAE,MAAQvB,EAAS,SACrD,IAAMwB,EAAQ,SAAS,eAAeD,EAAM,cAAc,aAAa,aAAa,CAAC,EACrFC,EAAM,KAAO,EACjB,CAEA,SAASf,EAAac,EACtB,CACIA,EAAM,eAAe,EACrBvB,EAAS,SAAW,CAAC,SAAS,eAAe,UAAU,EAAE,MACzD,aAAa,QAAQ,WAAYA,EAAS,QAAQ,EAClDQ,EAAWe,CAAK,CACpB,CAGA,SAASpB,EAAUoB,EACnB,CACI,IAAME,EAAaF,EAAM,OAAO,MAC1BG,EAAmBD,EAAW,OAEpC,GADAE,EAAY,EACRD,EAAmB,EACvB,CACI5B,EAAM,KAAO2B,EAAW,KACxB,IAAMG,EAAW,IAAI,gBAAgBH,EAAW,EAAE,EAClDzC,EAAS,IAAM4C,EACf5C,EAAS,iBAAiB,OAAS6C,GACnC,CACI/B,EAAM,MAAQd,EAAS,aACvBc,EAAM,OAASd,EAAS,cACxBG,EAAY,UAAU,OAAO,MAAM,EACnC2C,EAAU3C,EAAaH,CAAQ,EAC/Bc,EAAM,SAAW,EACrB,EAAG,CAAE,KAAM,EAAK,CAAC,CACrB,CACJ,CAEA,SAASiC,GACT,CACqB5C,EAAY,WAAW,IAAI,EACnC,UAAU,EAAG,EAAGA,EAAY,MAAOA,EAAY,MAAM,EAC9D2C,EAAU3C,EAAaH,EAAUc,EAAM,QAASA,EAAM,OAAO,CACjE,CAEA,SAASkC,GACT,CACI,IAAMC,EAAW9C,EAAY,WAAW,IAAI,EAC5C,GACA,CACIU,EAAkB,KAAOoC,EAAS,aAC9BpC,EAAkB,GAAKC,EAAM,KAC7BD,EAAkB,GAAKC,EAAM,MAC5BD,EAAkB,GAAKA,EAAkB,IAAMC,EAAM,MACrDD,EAAkB,GAAKA,EAAkB,IAAMC,EAAM,IAC1D,CACJ,OAASoC,EAAP,CAEE,MAAM,qBAAqB,EAC3B,MACJ,CAEA3C,EAAe,UAAU,OAAO,MAAM,EACtCA,EAAe,UAAU,IAAI,iBAAiB,EAC9CA,EAAe,MAAQM,EAAkB,GAAKA,EAAkB,GAChEN,EAAe,OAASM,EAAkB,GAAKA,EAAkB,GACrDN,EAAe,WAAW,IAAI,EACtC,aAAaM,EAAkB,KAAM,EAAG,CAAC,CACjD,CAEA,SAASe,EAAWW,EACpB,CACIzB,EAAM,QAAU,CAACyB,EAAM,OAAO,MAC1BzB,EAAM,UAENiC,EAAU,CAElB,CAEA,SAASlB,EAAWU,EACpB,CACIzB,EAAM,QAAU,CAACyB,EAAM,OAAO,MAC1BzB,EAAM,UAENiC,EAAU,CAElB,CAEA,SAASJ,GACT,CACI7B,EAAM,QAAU,EAChBA,EAAM,QAAU,EAChBb,EAAa,MAAQ,EACrBC,EAAa,MAAQ,CACzB,CAEA,SAAS6B,EAAuBQ,EAChC,CACQzB,EAAM,WAAa,IAASyB,EAAM,SAAW,IAE7C1B,EAAkB,YAElBiB,EAAeS,CAAK,EAGxB1B,EAAkB,GAAKsC,GAAuBZ,EAAM,QAAUzB,EAAM,SAAWA,EAAM,IAAI,EAAIA,EAAM,KACnGD,EAAkB,GAAKsC,GAAuBZ,EAAM,QAAUzB,EAAM,SAAWA,EAAM,IAAI,EAAIA,EAAM,KACnGD,EAAkB,QAAU,GAE5BuC,EAAavC,EAAkB,GAAIA,EAAkB,EAAE,EAC3D,CAEA,SAASmB,EAAqBO,EAC9B,CACI,GACI1B,EAAkB,UAAY,IAC9BC,EAAM,WAAa,IACnBD,EAAkB,aAAe,IACjC0B,EAAM,SAAW,EACnB,OAKF,IAAIc,EAAQF,GAAuBZ,EAAM,QAAU1B,EAAkB,IAAMC,EAAM,IAAI,EACjFwC,EAASH,GAAuBZ,EAAM,QAAU1B,EAAkB,IAAMC,EAAM,IAAI,EAEtF,KAAOyC,EAAqBF,CAAK,IAAM,IAEnCA,EAAQ,KAAK,MAAMA,EAAQ,CAAC,EAEhC,KAAOE,EAAqBD,CAAM,IAAM,IAEpCA,EAAS,KAAK,MAAMA,EAAS,CAAC,EAGlCzC,EAAkB,GAAKA,EAAkB,GAAKwC,EAAQvC,EAAM,KAC5DD,EAAkB,GAAKA,EAAkB,GAAKyC,EAASxC,EAAM,KAKzDD,EAAkB,KAAOA,EAAkB,KAE3CA,EAAkB,IAAMG,EAAS,UAGjCH,EAAkB,KAAOA,EAAkB,KAE3CA,EAAkB,IAAMG,EAAS,UAGrCH,EAAkB,WAAa,GAC/B2C,GAAe3C,CAAiB,EAChCmC,EAAK,CACT,CAcA,SAASS,EAAYC,EACrB,CACI,IAAMC,EAAeD,EAAM,OAAO,MAElC,GAD2BC,EAAa,OACf,EACzB,CACIC,EAAQ,KAAOD,EAAa,GAAG,KAC/B,IAAME,EAAa,IAAI,gBAAgBF,EAAa,EAAE,EACtDG,EAAW,IAAMD,EACjBC,EAAW,iBAAiB,OAASC,GACrC,CACIH,EAAQ,MAAQE,EAAW,aAC3BF,EAAQ,OAASE,EAAW,cAC5BE,EAAc,UAAU,OAAO,MAAM,EACrCC,EAAUD,EAAeF,CAAU,EACnCF,EAAQ,SAAW,GACnBM,EAAe,SAAW,GACtBC,EAAM,UAAYC,EAAkB,YAEpCC,EAAK,CAEb,EAAG,CAAE,KAAM,EAAK,CAAC,CACrB,CACJ,CAEA,SAASC,EAAiBZ,EAC1B,CACI,IAAMa,EAAO,SAAS,eAAe,cAAc,EAAE,OAAS,UAC9DX,EAAQ,KAAOW,EAAO,OACtBX,EAAQ,MAAQ,CAAC,SAAS,eAAe,eAAe,EAAE,OAAS,IACnEA,EAAQ,OAAS,CAAC,SAAS,eAAe,gBAAgB,EAAE,OAAS,IACrEI,EAAc,MAAQJ,EAAQ,MAC9BI,EAAc,OAASJ,EAAQ,OAC/B,IAAMY,EAAMR,EAAc,WAAW,IAAI,EACzCQ,EAAI,UAAY,mBAChBA,EAAI,SAAS,EAAG,EAAGZ,EAAQ,MAAOA,EAAQ,MAAM,EAChDE,EAAW,IAAME,EAAc,UAAU,EACzCA,EAAc,UAAU,OAAO,MAAM,EACrCJ,EAAQ,SAAW,GACnBM,EAAe,SAAW,GACtBC,EAAM,UAAYC,EAAkB,YAEpCC,EAAK,EAETI,EAAWf,CAAK,CACpB,CAEA,SAASgB,GACT,CACI,IAAMC,EAAaX,EAAc,UAAU,WAAW,EAChDY,EAAM,IAAI,eAChBA,EAAI,aAAe,OACnBA,EAAI,OAAS,UACb,CACI,IAAIC,EAAI,SAAS,cAAc,GAAG,EAClCA,EAAE,KAAO,OAAO,IAAI,gBAAgBD,EAAI,QAAQ,EAChDC,EAAE,SAAWjB,EAAQ,KACrBiB,EAAE,MAAM,QAAU,OAClB,SAAS,KAAK,YAAYA,CAAC,EAC3BA,EAAE,MAAM,EACRA,EAAE,OAAO,CACb,EACAD,EAAI,KAAK,MAAOD,CAAU,EAC1BC,EAAI,KAAK,CACb,CAEA,SAASE,GAAMpB,EACf,CACI,IAAMqB,EAAIC,EAAsBtB,EAAM,QAAUE,EAAQ,IAAI,EAAIoB,EAAsBZ,EAAkB,KAAK,MAAQ,CAAC,EAChHa,EAAID,EAAsBtB,EAAM,QAAUE,EAAQ,IAAI,EAAIoB,EAAsBZ,EAAkB,KAAK,OAAS,CAAC,EAEjHc,GAASd,EAAkB,GAAKA,EAAkB,IAAMD,EAAM,KAC9DgB,GAAUf,EAAkB,GAAKA,EAAkB,IAAMD,EAAM,KAErE,GAAIC,EAAkB,KACtB,CACI,IAAMI,EAAMR,EAAc,WAAW,IAAI,EACnCoB,EAAeZ,EAAI,aAAaO,EAAGE,EAAGC,EAAOC,CAAM,EACnDE,EAAO,IAAIC,EAAKF,EAAcL,EAAGE,EAAGC,EAAOC,CAAM,EACvDvB,EAAQ,MAAM,KAAKyB,CAAI,EAEvB,IAAME,EADcC,EAAe,WAAW,IAAI,EACjB,aAAa,EAAG,EAAGpB,EAAkB,KAAK,MAAOA,EAAkB,KAAK,MAAM,EAC/GI,EAAI,aAAae,EAAcR,EAAGE,CAAC,EACnCQ,EAAQ,SAAW,EACvB,CACJ,CAEA,SAASJ,GACT,CACI,IAAMK,EAAW9B,EAAQ,MAAM,GAAG,EAAE,EACpC,GAAI,CAAC8B,EAAU,OACf,IAAMlB,EAAMR,EAAc,WAAW,IAAI,EACnC2B,EAAWnB,EAAI,aAAakB,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACnFE,EAAO,IAAIN,EAAKK,EAAUD,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACvF9B,EAAQ,MAAM,KAAKgC,CAAI,EACvBpB,EAAI,UAAUkB,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACrElB,EAAI,aAAakB,EAAS,KAAMA,EAAS,EAAGA,EAAS,CAAC,EACtD9B,EAAQ,MAAM,IAAI,EAClBiC,EAAQ,SAAW,GACfjC,EAAQ,MAAM,SAAW,IAEzB6B,EAAQ,SAAW,GAE3B,CAEA,SAASG,GACT,CACI,IAAMF,EAAW9B,EAAQ,MAAM,GAAG,EAAE,EACpC,GAAI,CAAC8B,EAAU,OACf,IAAMlB,EAAMR,EAAc,WAAW,IAAI,EACnC8B,EAAWtB,EAAI,aAAakB,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACnFL,EAAO,IAAIC,EAAKQ,EAAUJ,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACvF9B,EAAQ,MAAM,KAAKyB,CAAI,EACvBb,EAAI,UAAUkB,EAAS,EAAGA,EAAS,EAAGA,EAAS,MAAOA,EAAS,MAAM,EACrElB,EAAI,aAAakB,EAAS,KAAMA,EAAS,EAAGA,EAAS,CAAC,EACtD9B,EAAQ,MAAM,IAAI,EAClB6B,EAAQ,SAAW,GACf7B,EAAQ,MAAM,SAAW,IAEzBiC,EAAQ,SAAW,GAE3B,CAGA,SAASE,GAAmBrC,EAC5B,CACI,GAAIU,EAAkB,OAAS,OAAW,OAEtCoB,EAAe,MAAM,QAAUA,EAAe,MAAQ5B,EAAQ,KAAO,OAErE4B,EAAe,MAAM,MAAQA,EAAe,MAAQ5B,EAAQ,KAAO,KACnE4B,EAAe,MAAM,OAASA,EAAe,OAAS5B,EAAQ,KAAO,MAGzE,IAAMmB,GAAKC,EAAsBtB,EAAM,QAAUE,EAAQ,IAAI,EAAIoB,EAAsBZ,EAAkB,KAAK,MAAQ,CAAC,GAAKR,EAAQ,KAC9HqB,GAAKD,EAAsBtB,EAAM,QAAUE,EAAQ,IAAI,EAAIoB,EAAsBZ,EAAkB,KAAK,OAAS,CAAC,GAAKR,EAAQ,KAC/HoC,EAAU,SAAS,KAAK,YAAc,EAAIC,EAAW,WACrDC,EAAUC,EAAeF,EAAW,UAC1CT,EAAe,MAAM,KAAOQ,EAAUjB,EAAI,KAC1CS,EAAe,MAAM,IAAMU,EAAUjB,EAAI,IAC7C,CAEA,SAASmB,IACT,CACI,IAAM5B,EAAMgB,EAAe,WAAW,IAAI,EAEpCa,EAAiB,SAAS,cAAc,QAAQ,EAClCA,EAAe,WAAW,IAAI,EACtC,UAAUb,EAAgB,EAAG,CAAC,EAE1ChB,EAAI,UAAU,EAAG,EAAGJ,EAAkB,KAAK,MAAOA,EAAkB,KAAK,MAAM,EAC/EI,EAAI,UAAUJ,EAAkB,KAAK,MAAO,CAAC,EAC7CI,EAAI,MAAM,GAAI,CAAC,EACfA,EAAI,UAAU6B,EAAgB,EAAG,CAAC,EAClC7B,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CACrC,CAEA,SAAS8B,IACT,CACI,IAAM9B,EAAMgB,EAAe,WAAW,IAAI,EAEpCa,EAAiB,SAAS,cAAc,QAAQ,EAClCA,EAAe,WAAW,IAAI,EACtC,UAAUb,EAAgB,EAAG,CAAC,EAE1ChB,EAAI,UAAU,EAAG,EAAGJ,EAAkB,KAAK,MAAOA,EAAkB,KAAK,MAAM,EAC/EI,EAAI,UAAU,EAAGJ,EAAkB,KAAK,MAAM,EAC9CI,EAAI,MAAM,EAAG,EAAE,EACfA,EAAI,UAAU6B,EAAgB,EAAG,CAAC,EAClC7B,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CACrC,CAEA,SAAS+B,GAAoB7C,EAC7B,CACIA,EAAM,gBAAgB,EACtBA,EAAM,eAAe,EACjBA,EAAM,SAAW,IAEL8B,EAAe,WAAW,IAAI,EACtC,UAAU,EAAG,EAAGA,EAAe,MAAOA,EAAe,MAAM,EAC/DpB,EAAkB,KAAO,OACzBoB,EAAe,MAAM,KAAO,MAC5BA,EAAe,MAAM,IAAM,MAC3BA,EAAe,MAAQ,MACvBA,EAAe,OAAS,MAEhC,CAGA,SAASgB,EAAaC,EAAOC,EAC7B,CACQtC,EAAkB,aACtBuC,EAAQ,MAAM,MAAQ,MACtBA,EAAQ,MAAM,OAAS,MACvBA,EAAQ,MAAM,KAAOF,EAAQ,KAC7BE,EAAQ,MAAM,IAAMD,EAAQ,KAChC,CAEA,SAASE,GAAeC,EACxB,CACI,IAAM9B,EAAIC,EAAsB6B,EAAK,GAAKA,EAAK,EAAE,EAC3C5B,EAAID,EAAsB6B,EAAK,GAAKA,EAAK,EAAE,EAE7CF,EAAQ,MAAM,QAAU5B,EAAI,OAE5B4B,EAAQ,MAAM,MAAQ5B,EAAI,MAG1B4B,EAAQ,MAAM,SAAW1B,EAAI,OAE7B0B,EAAQ,MAAM,OAAS1B,EAAI,MAG/B6B,EAAqB,UAAY,UAAU/B,EAAIgC,EAAS,oBAAoB9B,EAAI8B,EAAS,UAC7F,CAEA,SAASC,IACT,CACIL,EAAQ,MAAM,MAAQ,MACtBA,EAAQ,MAAM,OAAS,MACvBA,EAAQ,MAAM,KAAO,MACrBA,EAAQ,MAAM,IAAM,KACxB,CAGA,SAASM,GAAavD,EACtB,CAII,GAHIA,EAAM,SAASA,EAAM,eAAe,EAGpCA,EAAM,SAAWA,EAAM,OAAO,KAAO,eAAiBS,EAAM,SAChE,CACQC,EAAkB,YAAY8C,EAAexD,CAAK,EAEtD,IAAIyD,EAASC,EACb,GAAI1D,EAAM,WAAa,EACvB,CACI,GAAIS,EAAM,OAAS,GAAI,OACvBA,EAAM,KAAOkD,EAAMlD,EAAM,KAAO,EAAG,EAAG,EAAE,EACxCgD,GAAWzD,EAAM,QAAUA,EAAM,QAAU,GAAK,EAChD0D,GAAW1D,EAAM,SAAWA,EAAM,QAAUyC,GAAgB,GAAK,CAErE,SACSzC,EAAM,WAAa,EAC5B,CACI,GAAIS,EAAM,KAAO,IAAM,OACvBA,EAAM,MAAQ,EACdgD,GAAWzD,EAAM,QAAUA,EAAM,QAAU,GAAK,EAChD0D,GAAW1D,EAAM,SAAWA,EAAM,QAAUyC,GAAgB,GAAK,CACrE,CAEAmB,EAAY,MAAM,MAAQnD,EAAM,MAAQA,EAAM,KAAO,KACrDmD,EAAY,MAAM,OAASnD,EAAM,OAASA,EAAM,KAAO,KACvDoD,EAAU,OAAOJ,EAASC,CAAO,EAEjCI,EAAe,UAAY,SAASrD,EAAM,OAEtCA,EAAM,MAAQ,IAEdmD,EAAY,MAAM,gBAAkB,qBAAqBnD,EAAM,KAAO4C,EAAS,SAAW,UAElG,CAGA,GAAIrD,EAAM,SAAWA,EAAM,OAAO,KAAO,iBAAmBE,EAAQ,SACpE,CACI,IAAIuD,EAASC,EACb,GAAI1D,EAAM,WAAa,EACvB,CACI,GAAIE,EAAQ,OAAS,GAAI,OACzBA,EAAQ,KAAOyD,EAAMzD,EAAQ,KAAO,EAAG,EAAG,EAAE,EAC5CuD,GAAWzD,EAAM,SAAWA,EAAM,QAAUuC,EAAW,YAAc,GAAK,EAC1EmB,GAAW1D,EAAM,SAAWA,EAAM,QAAUuC,EAAW,WAAa,GAAK,CAC7E,SACSvC,EAAM,WAAa,EAC5B,CACI,GAAIE,EAAQ,KAAO,IAAM,OACzBA,EAAQ,MAAQ,EAChBuD,GAAWzD,EAAM,SAAWA,EAAM,QAAUuC,EAAW,YAAc,GAAK,EAC1EmB,GAAW1D,EAAM,SAAWA,EAAM,QAAUuC,EAAW,WAAa,GAAK,CAC7E,CAEAjC,EAAc,MAAM,MAAQJ,EAAQ,MAAQA,EAAQ,KAAO,KAC3DI,EAAc,MAAM,OAASJ,EAAQ,OAASA,EAAQ,KAAO,KAC7DqC,EAAW,OAAOkB,EAASC,CAAO,EAElCK,EAAiB,UAAY,SAAS7D,EAAQ,OAE1CA,EAAQ,MAAQ,IAEhBI,EAAc,MAAM,gBAAkB,qBAAqBJ,EAAQ,KAAOmD,EAAS,SAAW,UAEtG,CACJ,CAGA,SAASW,GAAehE,EACxB,CACI,GAAIA,EAAM,SAAWA,EAAM,MAAQ,KAAO+B,EAAQ,WAAa,GAC/D,CACI/B,EAAM,eAAe,EACrB2B,EAAK,EACL,MACJ,CAEA,GAAI3B,EAAM,SAAWA,EAAM,MAAQ,KAAOmC,EAAQ,WAAa,GAC/D,CACInC,EAAM,eAAe,EACrBkC,EAAK,EACL,MACJ,CAEA,GAAIlC,EAAM,SAAWA,EAAM,MAAQ,KAAOE,EAAQ,SAClD,CACIF,EAAM,eAAe,EACrBgB,EAAuB,EACvB,MACJ,CAEA,GAAIhB,EAAM,UAAY,IAASA,EAAM,MAAQ,KAAOU,EAAkB,OAAS,OAC/E,CACIgC,GAAM,EACN,MACJ,CAEA,GAAI1C,EAAM,UAAY,IAASA,EAAM,MAAQ,KAAOU,EAAkB,OAAS,OAC/E,CACIkC,GAAM,EACN,MACJ,CAEI5C,EAAM,SAAWA,EAAM,MAAQ,KAAOS,EAAM,WAE5CT,EAAM,eAAe,EACrBU,EAAkB,GAAK,EACvBA,EAAkB,GAAK+B,EACvB/B,EAAkB,QAAU,GAC5BoC,EAAapC,EAAkB,GAAIA,EAAkB,EAAE,EACvDA,EAAkB,GAAKD,EAAM,MAC7BC,EAAkB,GAAKD,EAAM,OAC7BC,EAAkB,WAAa,GAC/BuC,EAAQ,MAAM,MAAQxC,EAAM,MAAQ,KACpCwC,EAAQ,MAAM,OAASxC,EAAM,OAAS,KACtCE,EAAK,EAEb,CAGA,SAASsD,IACT,CACIvD,EAAkB,GAAK,EACvBA,EAAkB,GAAK,EACvBA,EAAkB,GAAK,EACvBA,EAAkB,GAAK,EACvBA,EAAkB,QAAU,EAChC,CAEA,SAASH,EAAU2D,EAAQC,EAAK9C,EAAI,EAAGE,EAAI,EAC3C,CACI,IAAMT,EAAMoD,EAAO,WAAW,IAAI,EAClCA,EAAO,MAAQC,EAAI,aACnBD,EAAO,OAASC,EAAI,cACpBrD,EAAI,UAAUqD,EAAK9C,EAAGE,CAAC,CAC3B,CAEA,SAASD,EAAsB8C,EAC/B,CACI,IAAMC,EAAOhB,EAAS,SACtB,OAAO,KAAK,MAAMe,EAAMC,CAAI,EAAIA,CACpC,CAEA,SAASC,EAAqBC,EAC9B,CACI,OAAIA,IAAQ,EAAU,GACfA,EAAMlB,EAAS,WAAa,CACvC,CAEA,SAASM,EAAMa,EAAQC,EAAKC,EAC5B,CACI,OAAO,KAAK,IAAID,EAAK,KAAK,IAAID,EAAQE,CAAG,CAAC,CAC9C,CAEA,SAASlB,EAAexD,EACxB,CACIA,EAAM,gBAAgB,EACtBA,EAAM,eAAe,EACrBiE,GAAU,EACVX,GAAa,EACb5C,EAAkB,WAAa,GAC/B0C,EAAqB,UAAY,oBACrC,CAYA,IAAMuB,EAAN,KACA,CACI,YAAYC,EAAMC,EAAGC,EAAGC,EAAOC,EAC/B,CACI,KAAK,KAAOJ,EACZ,KAAK,EAAIC,EACT,KAAK,EAAIC,EACT,KAAK,MAAQC,EACb,KAAK,OAASC,CAClB,CACJ",
  "names": ["saveTilesetBtn", "undoBtn", "redoBtn", "imageElm", "offsetXInput", "offsetYInput", "imageCanvas", "tilesetElm", "tilesetCanvas", "redZone", "floatingCanvas", "selectedAreaLabelElm", "imageZoomLabel", "tilesetZoomLabel", "leftPanel", "rightPanel", "selectedImageArea", "image", "tileset", "settings", "visibleModal", "navbarHeight", "openImage", "openTileset", "openModal", "onMouseWheel", "elm", "closeModal", "saveSettings", "createNewTileset", "handleKeyPress", "setOffsetX", "setOffsetY", "resetSelection", "onImageCanvasMouseDown", "onImageCanvasMouseUp", "undo", "redo", "downloadTilesetAsImage", "moveFloatingCanvas", "paste", "resetFloatingCanvas", "event", "modal", "imageFiles", "imageFilesLength", "resetOffset", "imageSrc", "e", "drawImage", "moveImage", "copy", "imageCtx", "error", "roundMultipleTilesize", "placeRedZone", "width", "height", "isMultipleOfTilesize", "setRedZoneSize", "openTileset", "event", "tilesetFiles", "tileset", "tilesetSrc", "tilesetElm", "e", "tilesetCanvas", "drawImage", "saveTilesetBtn", "image", "selectedImageArea", "copy", "createNewTileset", "name", "ctx", "closeModal", "downloadTilesetAsImage", "newTileset", "xhr", "a", "paste", "x", "roundMultipleTilesize", "y", "width", "height", "previousData", "undo", "Task", "floatingData", "floatingCanvas", "undoBtn", "lastTask", "redoData", "redo", "redoBtn", "undoData", "moveFloatingCanvas", "marginX", "rightPanel", "marginY", "navbarHeight", "flipX", "inMemoryCanvas", "flipY", "resetFloatingCanvas", "placeRedZone", "x_pos", "y_pos", "redZone", "setRedZoneSize", "zone", "selectedAreaLabelElm", "settings", "resetRedZone", "onMouseWheel", "resetSelection", "scrollX", "scrollY", "clamp", "imageCanvas", "leftPanel", "imageZoomLabel", "tilesetZoomLabel", "handleKeyPress", "resetZone", "canvas", "img", "num", "size", "isMultipleOfTilesize", "nbr", "number", "min", "max", "Task", "data", "x", "y", "width", "height"]
}
